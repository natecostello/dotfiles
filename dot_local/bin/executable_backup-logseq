#!/bin/bash
set -euo pipefail

# === Settings ===
SRC="$HOME/Logseq"
ROOT="LogseqBackup"
WEEKLY_DOW="Sun"
LOGDIR="$HOME/Library/Logs"
LOGFILE="$LOGDIR/backup-logseq.log"

mkdir -p "$LOGDIR"
TS() { date +"%FT%T%z"; }

echo "===== [$(TS)] backup-logseq start ====="

# === Secrets ===
PASS="$(security find-generic-password -a "$USER" -s rclone/logseq/crypt_passphrase -w)"
TOKEN="$(security find-generic-password -a "$USER" -s rclone/logseq/dropbox_token -w)"
OBSC_PASS="$(rclone obscure "$PASS")"

# === rclone remotes via env ===
export RCLONE_CONFIG_LOGSEQDRIVE_TYPE=dropbox
export RCLONE_CONFIG_LOGSEQDRIVE_TOKEN="$TOKEN"

export RCLONE_CONFIG_LOGSEQCRYPT_TYPE=crypt
export RCLONE_CONFIG_LOGSEQCRYPT_REMOTE="LOGSEQDRIVE:${ROOT}"
export RCLONE_CONFIG_LOGSEQCRYPT_PASSWORD="$OBSC_PASS"
export RCLONE_CONFIG_LOGSEQCRYPT_PASSWORD2="$OBSC_PASS"
export RCLONE_CONFIG_LOGSEQCRYPT_FILENAME_ENCODING=base32768

DRIVE="LOGSEQDRIVE:${ROOT}"
CRYPT="LOGSEQCRYPT:"

# === Date labels ===
TODAY="$(date +%F)"
WEEK="$(date +%G-%V)"
MONTH="$(date +%Y-%m)"

DEST_CURRENT="${CRYPT}current"
DEST_CHANGES="${CRYPT}changes/${TODAY}"
SNAP_DAILY="${CRYPT}snapshots/daily/${TODAY}"
SNAP_WEEKLY="${CRYPT}snapshots/weekly/${WEEK}"
SNAP_MONTHLY="${CRYPT}snapshots/monthly/${MONTH}"

# === Sync with backup-dir ===
echo "[$(TS)] Syncing $SRC -> $DEST_CURRENT with backup-dir $DEST_CHANGES"
rclone sync "$SRC" "$DEST_CURRENT" \
  --backup-dir "$DEST_CHANGES" \
  --filter-from "$HOME/.config/rclone/filters/logseq-backup.txt" \
  --fast-list \
  --links \
  --one-file-system

# === Server-side snapshots ===
echo "[$(TS)] Creating daily snapshot at $SNAP_DAILY"
rclone copy "$DEST_CURRENT" "$SNAP_DAILY" --fast-list --create-empty-src-dirs

if [[ "$(date +%a)" == "$WEEKLY_DOW" ]]; then
  echo "[$(TS)] Creating weekly snapshot at $SNAP_WEEKLY"
  rclone copy "$DEST_CURRENT" "$SNAP_WEEKLY" --fast-list --create-empty-src-dirs
fi

if [[ "$(date +%d)" == "01" ]]; then
  echo "[$(TS)] Creating monthly snapshot at $SNAP_MONTHLY"
  rclone copy "$DEST_CURRENT" "$SNAP_MONTHLY" --fast-list --create-empty-src-dirs
fi

# === Retention (POSIX-safe, no mapfile) ===
prune_keep() {
  base="$1"; keep="$2"
  echo "[$(TS)] Pruning $base to keep $keep"
  dirs="$(rclone lsf "$base" --dirs-only --format=p | LC_ALL=C sort || true)"
  [ -z "$dirs" ] && return 0
  total="$(printf "%s\n" "$dirs" | wc -l | tr -d " ")"
  [ "$total" -le "$keep" ] && return 0
  del_count=$(( total - keep ))
  printf "%s\n" "$dirs" | head -n "$del_count" | while IFS= read -r d; do
    [ -z "$d" ] && continue
    echo "[$(TS)] Deleting ${base}${d}"
    rclone purge "${base}${d}"
  done
}

prune_keep "${CRYPT}snapshots/daily/" 7
prune_keep "${CRYPT}snapshots/weekly/" 4
prune_keep "${CRYPT}snapshots/monthly/" 12

echo "===== [$(TS)] backup-logseq done ====="
